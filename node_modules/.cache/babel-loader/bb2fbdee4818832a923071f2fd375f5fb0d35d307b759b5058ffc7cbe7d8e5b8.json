{"ast":null,"code":"var _jsxFileName = \"/home/kwinkich/work/tg-bot/client/src/components/ProductList/ProductList.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport useTelegram from '../../hooks/useTelegram';\nimport { ProductItem } from '../ProductItem/ProductItem';\nimport './ProductList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst products = [{\n  id: '1',\n  title: 'tovar1',\n  price: 100,\n  description: 'desc1'\n}, {\n  id: '2',\n  title: 'tovar2',\n  price: 200,\n  description: 'desc2'\n}, {\n  id: '3',\n  title: 'tovar3',\n  price: 300,\n  description: 'desc3'\n}, {\n  id: '4',\n  title: 'tovar4',\n  price: 400,\n  description: 'desc4'\n}, {\n  id: '5',\n  title: 'tovar5',\n  price: 500,\n  description: 'desc5'\n}, {\n  id: '6',\n  title: 'tovar6',\n  price: 600,\n  description: 'desc6'\n}];\nexport const ProductList = () => {\n  _s();\n  const [addedItems, setAddedItems] = useState([]);\n  const {\n    tg\n  } = useTelegram();\n  const onAdd = product => {\n    const alreadyAdded = addedItems.find(item => item.id === product.id);\n    let newItems = [];\n    if (alreadyAdded) {\n      newItems = addedItems.filter(item => item.id !== product.id);\n    } else {\n      newItems = [...addedItems, product];\n    }\n    setAddedItems(newItems);\n    if (newItems.length === 0) {\n      tg.MainButton.hide();\n    } else {\n      tg.MainButton.show();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lsit\",\n    children: products.map(item => /*#__PURE__*/_jsxDEV(ProductItem, {\n      product: item,\n      onAdd: onAdd,\n      className: 'item'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n_s(ProductList, \"alYdH310hx19kpYUEdCn8g9ryYQ=\", false, function () {\n  return [useTelegram];\n});\n_c = ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["useState","useTelegram","ProductItem","jsxDEV","_jsxDEV","products","id","title","price","description","ProductList","_s","addedItems","setAddedItems","tg","onAdd","product","alreadyAdded","find","item","newItems","filter","length","MainButton","hide","show","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kwinkich/work/tg-bot/client/src/components/ProductList/ProductList.jsx"],"sourcesContent":["import { useState } from 'react';\nimport useTelegram from '../../hooks/useTelegram';\nimport { ProductItem } from '../ProductItem/ProductItem';\nimport './ProductList.css';\n\nconst products = [\n\t{ id: '1', title: 'tovar1', price: 100, description: 'desc1' },\n\t{ id: '2', title: 'tovar2', price: 200, description: 'desc2' },\n\t{ id: '3', title: 'tovar3', price: 300, description: 'desc3' },\n\t{ id: '4', title: 'tovar4', price: 400, description: 'desc4' },\n\t{ id: '5', title: 'tovar5', price: 500, description: 'desc5' },\n\t{ id: '6', title: 'tovar6', price: 600, description: 'desc6' },\n];\n\nexport const ProductList = () => {\n\tconst [addedItems, setAddedItems] = useState([]);\n\tconst { tg } = useTelegram();\n\n\tconst onAdd = (product) => {\n\t\tconst alreadyAdded = addedItems.find((item) => item.id === product.id);\n\t\tlet newItems = [];\n\n\t\tif (alreadyAdded) {\n\t\t\tnewItems = addedItems.filter((item) => item.id !== product.id);\n\t\t} else {\n\t\t\tnewItems = [...addedItems, product];\n\t\t}\n\n\t\tsetAddedItems(newItems);\n\n\t\tif (newItems.length === 0) {\n\t\t\ttg.MainButton.hide();\n\t\t} else {\n\t\t\ttg.MainButton.show();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='lsit'>\n\t\t\t{products.map((item) => (\n\t\t\t\t<ProductItem product={item} onAdd={onAdd} className={'item'} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,WAAW,QAAQ,4BAA4B;AACxD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,QAAQ,GAAG,CAChB;EAAEC,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAQ,CAAC,EAC9D;EAAEH,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAQ,CAAC,EAC9D;EAAEH,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAQ,CAAC,EAC9D;EAAEH,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAQ,CAAC,EAC9D;EAAEH,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAQ,CAAC,EAC9D;EAAEH,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE,GAAG;EAAEC,WAAW,EAAE;AAAQ,CAAC,CAC9D;AAED,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAAEc;EAAG,CAAC,GAAGb,WAAW,CAAC,CAAC;EAE5B,MAAMc,KAAK,GAAIC,OAAO,IAAK;IAC1B,MAAMC,YAAY,GAAGL,UAAU,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACb,EAAE,KAAKU,OAAO,CAACV,EAAE,CAAC;IACtE,IAAIc,QAAQ,GAAG,EAAE;IAEjB,IAAIH,YAAY,EAAE;MACjBG,QAAQ,GAAGR,UAAU,CAACS,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACb,EAAE,KAAKU,OAAO,CAACV,EAAE,CAAC;IAC/D,CAAC,MAAM;MACNc,QAAQ,GAAG,CAAC,GAAGR,UAAU,EAAEI,OAAO,CAAC;IACpC;IAEAH,aAAa,CAACO,QAAQ,CAAC;IAEvB,IAAIA,QAAQ,CAACE,MAAM,KAAK,CAAC,EAAE;MAC1BR,EAAE,CAACS,UAAU,CAACC,IAAI,CAAC,CAAC;IACrB,CAAC,MAAM;MACNV,EAAE,CAACS,UAAU,CAACE,IAAI,CAAC,CAAC;IACrB;EACD,CAAC;EAED,oBACCrB,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAC,QAAA,EACnBtB,QAAQ,CAACuB,GAAG,CAAET,IAAI,iBAClBf,OAAA,CAACF,WAAW;MAACc,OAAO,EAAEG,IAAK;MAACJ,KAAK,EAAEA,KAAM;MAACW,SAAS,EAAE;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC9D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER,CAAC;AAACrB,EAAA,CA9BWD,WAAW;EAAA,QAERT,WAAW;AAAA;AAAAgC,EAAA,GAFdvB,WAAW;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}